import*as e from"rxjs";import*as r from"short-unique-id";import*as a from"memory-level";import*as o from"abstract-level";import*as t from"level";var d={594:(o,d,n)=>{n.d(d,{eE:()=>I,tP:()=>v,FV:()=>f,qi:()=>b,_f:()=>O,qJ:()=>S,iC:()=>j,de:()=>g,mr:()=>y,g4:()=>c,SV:()=>u});const p=(l={Observable:()=>e.Observable,Subject:()=>e.Subject,catchError:()=>e.catchError,concatMap:()=>e.concatMap,filter:()=>e.filter,first:()=>e.first,from:()=>e.from,map:()=>e.map,merge:()=>e.merge,mergeMap:()=>e.mergeMap,of:()=>e.of,range:()=>e.range,switchMap:()=>e.switchMap,takeWhile:()=>e.takeWhile,tap:()=>e.tap,throwError:()=>e.throwError,toArray:()=>e.toArray},s={},n.d(s,l),s);var l,s;const i=(e=>{var r={};return n.d(r,e),r})({default:()=>r.default}),h=new i.default.default({dictionary:"alphanum"}),g=()=>h.stamp(12),u=e=>h.parseStamp(e),b=e=>{const r=new p.Subject,a=e.reduce(((e,r)=>e.pipe((0,p.mergeMap)(r))),r.asObservable());return a.next=e=>(setTimeout((()=>r.next(e))),a),a},c=()=>b([e=>(0,p.of)(e)]),m={LABEL:"0",FROM_REL:"1",TO_REL:"2",PROP:"3"},v=e=>{var r,a,o,t,d,n,l;return(0,p.of)(Object.assign(Object.assign({},e),{handlers:{putNode:(null===(r=e.handlers)||void 0===r?void 0:r.putNode)||c(),getNode:(null===(a=e.handlers)||void 0===a?void 0:a.getNode)||c(),putEdge:(null===(o=e.handlers)||void 0===o?void 0:o.putEdge)||c(),getEdge:(null===(t=e.handlers)||void 0===t?void 0:t.getEdge)||c(),nodesByLabel:(null===(d=e.handlers)||void 0===d?void 0:d.nodesByLabel)||c(),nodesByProp:(null===(n=e.handlers)||void 0===n?void 0:n.nodesByProp)||c(),getRelationships:(null===(l=e.handlers)||void 0===l?void 0:l.getRelationships)||c()}}))},f=(e,r,a,o)=>(0,p.of)({nodeId:r||g(),label:a,props:o}).pipe((0,p.switchMap)((r=>e.handlers.putNode.next({graph:e,node:r}).pipe((0,p.filter)((({node:{nodeId:e}})=>r.nodeId===e))))),(0,p.map)((({node:r})=>({graph:e,nodeId:r.nodeId}))),(0,p.first)()),I=(e,r)=>new p.Observable((a=>{const o=e.handlers.putNode.pipe((0,p.tap)((()=>e.handlers.getNode.next({graph:e,nodeId:r})))).subscribe(),t=e.handlers.getNode.next({graph:e,nodeId:r}).pipe((0,p.filter)((({node:e,nodeId:r})=>void 0===e||e.nodeId===r)),(0,p.map)((({node:e})=>({node:e}))),(0,p.tap)((({node:o})=>a.next({graph:e,nodeId:r,node:o})))).subscribe();return()=>{o.unsubscribe(),t.unsubscribe()}})),y=(e,r)=>new p.Observable((a=>{const o=e.handlers.putNode.pipe((0,p.tap)((()=>e.handlers.nodesByLabel.next({graph:e,label:r})))).subscribe(),t=e.handlers.nodesByLabel.next({graph:e,label:r}).pipe((0,p.filter)((({label:e})=>e===r)),(0,p.map)((({nodes:a})=>({graph:e,label:r,nodes:a}))),(0,p.tap)((({nodes:o})=>a.next({graph:e,nodes:o,label:r})))).subscribe();return()=>{o.unsubscribe(),t.unsubscribe()}})),w=(e=>{var r={};return n.d(r,e),r})({MemoryLevel:()=>a.MemoryLevel});n.d({},{});const L=(e=>{var r={};return n.d(r,e),r})({Level:()=>t.Level}),E={},M=(e,r)=>(0,p.of)(E[e.graphId]).pipe((0,p.map)((e=>e||(r.dir?new L.Level(r.dir):new w.MemoryLevel))),(0,p.tap)((r=>E[e.graphId]=r))),O=e=>({graph:r,nodeId:a})=>M(r,e).pipe((0,p.mergeMap)((e=>e.get([r.graphId,a].join(".")))),(0,p.map)((e=>({graph:r,node:JSON.parse(e),nodeId:a}))),(0,p.catchError)((e=>e.notFound?(0,p.of)({graph:r,nodeId:a}):(0,p.throwError)(e)))),j=e=>({graph:r,node:a})=>M(r,e).pipe((0,p.switchMap)((e=>(0,p.merge)(e.put([r.graphId,a.nodeId].join("."),JSON.stringify(a)),e.put([r.graphId,m.LABEL,a.label,a.nodeId].join("."),""),x(r,e,a)))),(0,p.map)((()=>({graph:r,node:a})))),x=(e,r,a)=>(0,p.from)(Object.keys(a.props)).pipe((0,p.switchMap)((o=>r.put([e.graphId,m.PROP,a.label,o,a.props[o].toString(),a.nodeId].join("."),"")))),S=e=>({graph:r,label:a})=>M(r,e).pipe((0,p.switchMap)((e=>((e,r)=>new p.Observable((a=>{const o=e.iterator(r);return a.next(o),()=>o.close()})))(e,N([r.graphId,m.LABEL,a])))),(0,p.switchMap)((a=>(0,p.range)(1,1e3).pipe((0,p.concatMap)((()=>a.next())),(0,p.takeWhile)((e=>!!(null==e?void 0:e[0]))),(0,p.map)((e=>null==e?void 0:e[0].split(".")[3])),(0,p.switchMap)((a=>O(e)({graph:r,nodeId:a}))),(0,p.map)((({node:e})=>e)),(0,p.toArray)()))),(0,p.map)((e=>({graph:r,label:a,nodes:e})))),N=e=>e[e.length-1].includes("*")?{gte:e.join(".").replace("*",""),lt:e.join(".").replace("*","")+String.fromCharCode(255)}:{gt:e.join(".")+".",lt:e.join(".")+"."+String.fromCharCode(255)}}},n={};function p(e){var r=n[e];if(void 0!==r)return r.exports;var a=n[e]={exports:{}};return d[e](a,a.exports,p),a.exports}p.d=(e,r)=>{for(var a in r)p.o(r,a)&&!p.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:r[a]})},p.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);var l={};(()=>{p.d(l,{FV:()=>e.FV,SV:()=>e.SV,_f:()=>e._f,de:()=>e.de,eE:()=>e.eE,g4:()=>e.g4,iC:()=>e.iC,mr:()=>e.mr,qJ:()=>e.qJ,qi:()=>e.qi,tP:()=>e.tP});var e=p(594)})();var s=l.eE,i=l.tP,h=l.FV,g=l.qi,u=l._f,b=l.qJ,c=l.iC,m=l.de,v=l.mr,f=l.g4,I=l.SV;export{s as graphGet,i as graphOpen,h as graphPut,g as handlers,u as levelStoreGetNodeHandler,b as levelStoreNodesByLabelHandler,c as levelStorePutNodeHandler,m as newUid,v as nodesByLabel,f as nullHandler,I as timestampFromUid};